{"version":3,"sources":["index.js"],"names":["ListAttendance","console","log","this","props","className","attendance","map","each","day","when","pass","mail","id","React","Component","ListHeader","handleSubmit","date","Date","year","getFullYear","month","getMonth","getDay","hour","getHours","minutes","getMinutes","String","today","time","parseInt","Button","handleLowToHigh","e","preventDefault","checkinHistoryEach","lowToHigh","onSubmit","type","AutoButton","List","Main","state","text","receivedText","setState","concat","index","match","params","test","Div","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAgBMA,E,4JACJ,WAEE,OADAC,QAAQC,IAAI,yCAA0CC,KAAKC,OAEzD,qBAAKC,UAAU,mBAAf,SACIF,KAAKC,MAAME,WAAWC,KAAI,SAAAC,GAAI,OAC9B,gCACE,+BAAOA,EAAKC,MACZ,+BAAOD,EAAKE,OACZ,+BAAOF,EAAKG,OACZ,+BAAOH,EAAKI,SAJJJ,EAAKK,a,GANIC,IAAMC,WAkB7BC,E,4JACJ,WACE,OACE,sBAAKX,UAAU,eAAf,UACE,qCACA,sCACA,sCACA,6C,GAPiBS,IAAMC,WAa/B,SAASE,IACP,IAAMC,EAAO,IAAIC,KACXC,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WAAa,EAC1Bd,EAAMS,EAAKM,SACXC,EAAOP,EAAKQ,WAEdC,EAAUT,EAAKU,aACfD,EAAU,KACZA,EAAU,IAAME,OAAOF,IAGzB,IAAMG,EAAQV,EAAO,IAAME,EAAQ,IAAMb,EACnCsB,EAAOC,SAASP,EAAO,GAAKE,GAE9BhB,EAAO,GAuBX,MAP2B,CACzBF,IAAKqB,EACLpB,KAAMqB,EACNpB,KAdAA,EADEoB,EAFYC,SAAS,QAGhB,IAEA,IAaPpB,KAVW,MAATD,EACK,IAEA,K,IAaLsB,E,4MACJC,gBAAkB,SAACC,GACjBA,EAAEC,iBAEF,IAAMC,EAAqBpB,IAC3B,EAAKb,MAAMkC,UAAUD,I,4CAGvB,WACE,OACE,qBAAKhC,UAAU,SAAf,SACE,sBAAMkC,SAAUpC,KAAK+B,gBAArB,SACE,wBAAQM,KAAK,SAAb,8B,GAZW1B,IAAMC,WAmBrB0B,E,uKACJ,WACE,IAAMJ,EAAqBpB,IAC3BhB,QAAQC,IAAImC,GACZlC,KAAKC,MAAMkC,UAAUD,K,oBAGvB,WACE,OACE,8BACE,qD,GAViBJ,GAgBnBS,E,4JACJ,WACE,OACE,sBAAKrC,UAAU,OAAf,UACE,cAACW,EAAD,IACA,cAAChB,EAAD,CAAgBM,WAAYH,KAAKC,MAAME,oB,GAL5BQ,IAAMC,WAsDnB4B,E,4MACJC,MAAQ,CAAEC,KAAM,I,EAEhBP,UAAY,SAACO,GACX,IAAMC,EAAeD,EACjBC,GACF,EAAKC,UAAS,WACZ,MAAO,CAAEF,KAAM,EAAKD,MAAMC,KAAKG,OAAOF,GACnCvC,KAAI,SAACC,EAAMyC,GAEV,OADAzC,EAAI,GAASyC,EACNzC,SAKfP,QAAQC,IAAI,kCAAmC,EAAK0C,Q,uDAGtD,WACEzC,KAAKmC,YACLrC,QAAQC,IAAI,0CAA2CC,KAAKyC,S,oBAI9D,WAEE,OADA3C,QAAQC,IAAI,+BAAgCC,KAAKyC,OAE/C,iCACE,cAACF,EAAD,CAAMpC,WAAYH,KAAKyC,MAAMC,OACK,SAAjC1C,KAAKC,MAAM8C,MAAMC,OAAOC,KACvB,cAACX,EAAD,CAAYH,UAAWnC,KAAKmC,YAE5B,cAACL,EAAD,CAAQK,UAAWnC,KAAKmC,mB,GAhCfxB,IAAMC,WAuCnBsC,E,4JACJ,WACE,OACI,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,UAAWZ,IAChC,cAAC,IAAD,CAAOW,KAAK,IAAIC,UAAWZ,a,GANrB7B,IAAMC,WAaxByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACL,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.682a7c2a.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n/* \r\nDiv\r\n  (Header)\r\n  (Nav)\r\n  Main\r\n    List\r\n      ListHeader\r\n      ListAttendance\r\n        (ListAttendanceDailycheckin)\r\n    Button\r\n*/\r\n\r\nclass ListAttendance extends React.Component {\r\n  render() {\r\n    console.log(\"ListAttendance > render > this.state: \", this.props);\r\n    return (\r\n      <div className=\"list__attendance\">\r\n        { this.props.attendance.map(each => (\r\n          <div key={each.id}>\r\n            <span>{each.day}</span>\r\n            <span>{each.when}</span>\r\n            <span>{each.pass}</span>\r\n            <span>{each.mail}</span>                                    \r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass ListHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list__header\">\r\n        <h4>Day</h4>\r\n        <h4>When</h4>\r\n        <h4>Pass</h4>                                       \r\n        <h4>Mail</h4>\r\n      </div>\r\n    )\r\n  }  \r\n}\r\n\r\nfunction handleSubmit() {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDay();\r\n  const hour = date.getHours();\r\n  \r\n  let minutes = date.getMinutes();\r\n  if (minutes < 10) {\r\n    minutes = \"0\" + String(minutes);\r\n  }\r\n\r\n  const today = year + \"/\" + month + \"/\" + day;\r\n  const time = parseInt(hour + \"\" + minutes);\r\n\r\n  let pass = \"\";\r\n  let mail = \"\";\r\n  let untilWhen = parseInt(\"0700\");\r\n\r\n  if (time < untilWhen) {\r\n    pass = \"Y\"\r\n  } else {\r\n    pass = \"N\"\r\n  }\r\n\r\n  if (pass === \"Y\") {\r\n    mail = \"N\"\r\n  } else {\r\n    mail = \"Y\"\r\n  }\r\n\r\n  const checkinHistoryEach = {\r\n    day: today,\r\n    when: time,\r\n    pass: pass,\r\n    mail: mail\r\n  };\r\n\r\n  return checkinHistoryEach;\r\n}\r\n\r\nclass Button extends React.Component {\r\n  handleLowToHigh = (e) => {\r\n    e.preventDefault();\r\n\r\n    const checkinHistoryEach = handleSubmit();\r\n    this.props.lowToHigh(checkinHistoryEach);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"button\">\r\n        <form onSubmit={this.handleLowToHigh}>\r\n          <button type=\"submit\">Check In</button>\r\n        </form>\r\n      </div>      \r\n    )\r\n  }  \r\n}\r\n\r\nclass AutoButton extends Button {\r\n  componentDidMount() {\r\n    const checkinHistoryEach = handleSubmit();\r\n    console.log(checkinHistoryEach);\r\n    this.props.lowToHigh(checkinHistoryEach);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>From iPhone</span>\r\n      </div>\r\n    )\r\n  }   \r\n};\r\n\r\nclass List extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list\">\r\n        <ListHeader />\r\n        <ListAttendance attendance={this.props.attendance} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/* class Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <h2>Starbucks Attendance Checker</h2>      \r\n      </header>\r\n    )\r\n  }\r\n}; */\r\n\r\n/* class Nav extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav>\r\n      </nav>\r\n    )\r\n  }\r\n}; */\r\n\r\n/* function getCurrentLocation () {\r\n  var options = {\r\n    enableHighAccuracy: true,\r\n    timeout: 5000,\r\n    // maximumAge: 0\r\n  };\r\n\r\n  function success(position) {\r\n    const latitude  = position.coords.latitude;\r\n    const longitude = position.coords.longitude;\r\n\r\n    const href = `https://www.openstreetmap.org/#map=18/${latitude}/${longitude}`;\r\n    console.log(href);\r\n  };\r\n\r\n  if(navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(\r\n      success, \r\n      () => console.log(\"Error\"),\r\n      options\r\n    )\r\n  };\r\n}; */\r\n\r\nclass Main extends React.Component {  \r\n  state = { text: [] };\r\n\r\n  lowToHigh = (text) => {\r\n    const receivedText = text;\r\n    if (receivedText) {\r\n      this.setState(() => {\r\n        return { text: this.state.text.concat(receivedText)\r\n          .map((each, index) => {\r\n            each['id'] = index;\r\n            return each;\r\n          })\r\n        };\r\n      });\r\n    }\r\n    console.log(\"Main > lowToHigh > tihs.state: \", this.state);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.lowToHigh();\r\n    console.log(\"Main > componentDidMount > tihs.state: \", this.state);\r\n    // getCurrentLocation();\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Main > render > this.state: \", this.state);\r\n    return (\r\n      <main>\r\n        <List attendance={this.state.text} />\r\n        {this.props.match.params.test === \"test\" ? (\r\n          <AutoButton lowToHigh={this.lowToHigh} />          \r\n        ) : (\r\n          <Button lowToHigh={this.lowToHigh} />          \r\n        )}        \r\n      </main>\r\n    )\r\n  }\r\n};\r\n\r\nclass Div extends React.Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/:test\" component={Main} />\r\n            <Route path=\"/\" component={Main} />\r\n          </Switch>         \r\n        </Router>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Div />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}